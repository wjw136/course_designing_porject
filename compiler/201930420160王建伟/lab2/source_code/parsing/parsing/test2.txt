A Bini Cini D Eini F G Jini K L N P Q Rini Rleft Rright Sini Sright Tini U Vini Vright Wini Wfst Wright X Y Z B_1 E_1 C_1 J_1 WL Tright Tleft
h_1 i_1 m_1 o_1 type and array begin bool call case char constant dim do else end false for if input integer not of or output procedure program read real repeat set stop then to true until var while write <> <= >= := /* */ .. + - *ini /ini = <ini >ini ( ) [ ] :ini .ini ; , ' $ #
WfstWini ABini ACini ADini BiniEiniB_1 B_1+EiniB_1 B_1-EiniB_1 B_1$ BiniEini EiniFE_1
E_1*iniFE_1 E_1/iniFE_1 E_1$ EiniFini F-F FG Gh_1 Gi_1 G(Bini) CiniJiniC_1 C_1orJiniC_1 C_1$ JiniKJ_1 J_1andKJ_1 J_1$ KL KnotK Lm_1 Li_1 L(Cini) Li_1Ni_1 LBiniNBini N<ini N<> N<= N>= N>ini N= Do_1 Di_1 PQ PRini PSini PTini PU Qi_1:=Bini RleftifCinithen RrightRleftPelse RiniRleftP RiniRrightP WLwhile SrightWLCinido SiniSrightP Trightrepeat TleftTrightPuntil TiniTleftCini UbeginViniend VrightP; ViniVrightVini ViniP Wrightprogrami_1; WiniWrightXU.ini XvarY X$ YZ:initype;Y YZ:initype; Zi_1,Z Zi_1